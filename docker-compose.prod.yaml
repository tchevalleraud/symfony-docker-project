version: "3.8"
services:
  database:
    environment:
      MYSQL_ROOT_PASSWORD: ${DOCKER_DATABASE_PASSWORD}
    image: mysql
    restart: always
    volumes:
      - vdata_database:/var/lib/mysql
  messenger:
    build:
      context: ./docker/php
      args:
        USER_ID: ${USER_ID}
        GROUP_ID: ${GROUP_ID}
    command: ['php', 'bin/console', 'messenger:consume', 'priority_high', 'priority_normal', 'priority_low', '-vv']
    depends_on:
      - database
    restart: unless-stopped
    volumes:
      - "./app/:/var/www"
  nginx:
    image: nginx:alpine
    links:
      - php
    ports:
      - "${DOCKER_NGINX_PORT}:80"
    restart: always
    volumes:
      - "./app/:/var/www"
      - "./docker/nginx/nginx.conf:/etc/nginx/nginx.conf"
      - "./docker/nginx/site.prod.conf:/etc/nginx/conf.d/default.conf"
  node:
    build:
      context: ./docker/node
    command:
      - yarn run build
    user: '${USER_ID}:${GROUP_ID}'
    volumes:
      - ./app/:/usr/src/app
    working_dir: /usr/src/app
  minio:
    command: server /data --console-address ":9001"
    environment:
      MINIO_BROWSER_REDIRECT_URL: ${DOCKER_MINIO_CONSOLE}
      MINIO_ROOT_USER: ${DOCKER_MINIO_KEY}
      MINIO_ROOT_PASSWORD: ${DOCKER_MINIO_SECRET}
    image: minio/minio
    restart: unless-stopped
    volumes:
      - vdata_minio:/data
  php:
    build:
      context: ./docker/php
      args:
        USER_ID: ${USER_ID}
        GROUP_ID: ${GROUP_ID}
    command: ['symfony', 'server:start', '--port=80']
    links:
      - database
    restart: always
    volumes:
      - "./app/:/var/www"
  redis:
    image: redis:6-alpine
    restart: always
  swagger:
    environment:
      SWAGGER_JSON: /foo/swagger.json
    image: swaggerapi/swagger-ui
    restart: always
    volumes:
      - "./app/swagger.json:/foo/swagger.json"
volumes:
  vdata_database:
  vdata_minio: